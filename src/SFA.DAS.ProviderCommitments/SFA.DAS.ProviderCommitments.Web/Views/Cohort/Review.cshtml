@using SFA.DAS.ProviderCommitments.Web.Models
@using SFA.DAS.ProviderCommitments.Web.RouteValues
@inject ILinkGenerator LinkGenerator
@model SFA.DAS.ProviderCommitments.Web.Models.Cohort.ReviewViewModel

@{
    ViewData["Title"] = "Apprentice details ready for review";
    ViewBag.GaData.Vpv = "/unapproved/review";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-row">
        <div class="govuk-width-container">

            @(await Html.PartialAsync("_ApprenticeshipRequestsHeaderPartial", Model.ApprenticeshipRequestsHeaderViewModel))
            
            @if (Model.Cohorts.Count() > 0)
            {
                <table class="govuk-table das-table--responsive das-table--double-arrows das-table--condensed">
                    <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th scope="col" class="govuk-table__header das-table-cell-width-25">
                                <a class="@(Model.SortField == "Employer" ? Model.SortedByHeaderClassName : SortViewModel.HeaderClassName)"
                                   asp-route="@RouteNames.CohortReview"
                                   asp-all-route-data="@Model.BuildSortRouteData("Employer")"
                                   title="Sort the table by employer">
                                    Employer
                                </a>
                            </th>
                            <th scope="col" class="govuk-table__header das-table-cell-width-10">
                                <a class="@(Model.SortField == "CohortReference" ? Model.SortedByHeaderClassName : SortViewModel.HeaderClassName)"
                                   asp-route="@RouteNames.CohortReview"
                                   asp-all-route-data="@Model.BuildSortRouteData("CohortReference")"
                                   title="Sort the table by cohort reference">
                                    Cohort reference
                                </a>
                            </th>
                            <th scope="col" class="govuk-table__header das-table-cell-width-15">
                                <a class="@(Model.SortField == "DateReceived" ? Model.SortedByHeaderClassName : SortViewModel.HeaderClassName)"
                                   asp-route="@RouteNames.CohortReview"
                                   asp-all-route-data="@Model.BuildSortRouteData("DateReceived")"
                                   title="Sort the table by date received">
                                    Date received
                                </a>
                            </th>
                            <th scope="col" class="govuk-table__header das-table-cell-width-15 govuk-table__header--numeric">Number of apprentices</th>
                            <th scope="col" class="govuk-table__header das-table-cell-width-20">Last message</th>
                            <th scope="col" class="govuk-table__header das-table-cell-width-15 govuk-table__header--numeric"></th>
                        </tr>
                    </thead>
                    <tbody class="govuk-table__body">
                    @foreach (var cohort in Model.Cohorts)
                    {
                        <tr class="govuk-table__row" data-cohort="@cohort.CohortReference">
                            <td class="govuk-table__cell" data-label="Employer">@cohort.EmployerName</td>
                            <td class="govuk-table__cell" data-label="Reference">@cohort.CohortReference</td>
                            <td class="govuk-table__cell" data-label="DateReceived">@cohort.DateReceived.ToString("d MMM yyyy")</td>
                            <td class="govuk-table__cell govuk-table__cell--numeric" data-label="Number of apprentices">@cohort.NumberOfApprentices</td>
                            <td class="govuk-table__cell" data-label="Last Message">@cohort.LastMessage</td>
                            <td class="govuk-table__cell govuk-table__cell--numeric" data-label="">
                                <a id="details_link_@cohort.CohortReference" class="govuk-link cohort-details-link" href="@Url.Action("Details", new {Model.ProviderId, cohort.CohortReference})">Details</a>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            }
            else
            {
                <p class="govuk-body govuk-!-font-weight-bold">You currently have 0 apprentices ready for review</p>
            }
        </div>
    </div>
</div>

@section breadcrumb
{
    <a id="back-link" class="govuk-back-link" href="@LinkGenerator.ProviderApprenticeshipServiceLink("account")">Back</a>
}