@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.ProviderCommitments.Web.Models.Cohort
@using SFA.DAS.ProviderCommitments.Web.RouteValues
@model SFA.DAS.ProviderCommitments.Web.Models.Cohort.DetailsViewModel

@{
    ViewData["Title"] = Model.PageTitle;
    ViewBag.GaData.Vpv = "/unapproved/cohort";
    ViewBag.GaData.Org = Model.LegalEntityName;
    var bulkUploadUrl = Url.ProviderApprenticeshipServiceLink($"{Model.ProviderId}/apprentices/{ Model.CohortReference}/UploadApprenticeships");
    var reservationUrl = $"{Model.ProviderId}/reservations/{ Model.AccountLegalEntityHashedId}/select?cohortReference={Model.CohortReference}";

    if (!string.IsNullOrWhiteSpace(Model.TransferSenderHashedId))
    {
        reservationUrl += "&transferSenderId={Model.TransferSenderHashedId}";
    }
}

@if ((!Model.IsAgreementSigned)
     ||
     (!Model.IsCompleteForProvider && !Model.IsReadOnly)
     ||
     Model.HasOverlappingUln
     ||
     Model.HasEmailOverlaps)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <div class="govuk-notification-banner">
                <div class="govuk-notification-banner__header">
                    <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                        Important
                    </h2>
                </div>
                <div class="govuk-notification-banner__content">
                    <p class="govuk-notification-banner__heading">
                        You can’t approve this apprentice request until:
                    </p>
                    <ul>
                        @if (!Model.IsAgreementSigned)
                        {
                            <li>you’ve accepted an agreement with the Education and Skills Funding Agency</li>
                        }
                        @if (!Model.IsCompleteForProvider && !Model.IsReadOnly)
                        {
                            <li>all apprentice records are complete</li>
                        }
                        @if (Model.HasOverlappingUln)
                        {
                            <li>there are no overlapping training dates for your apprentices</li>
                        }
                        @if (Model.HasEmailOverlaps)
                        {
                            <li>each apprentice has a unique email address</li>
                        }
                    </ul>
                </div>
            </div>

        </div>
    </div>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <partial name="_ValidationSummary" />
        <h1 class="govuk-heading-xl">@Model.PageTitle</h1>
        <dl class="das-definition-list das-definition-list--inline">
            <dt class="das-definition-list__title govuk-!-margin-bottom-4">Employer</dt>
            <dd class="das-definition-list__definition govuk-!-margin-bottom-4">@Model.LegalEntityName</dd>
            <dt class="das-definition-list__title govuk-!-margin-bottom-4">Cohort reference</dt>
            <dd class="das-definition-list__definition govuk-!-margin-bottom-4">@Model.CohortReference</dd>
            <dt class="das-definition-list__title govuk-!-margin-bottom-4">Status</dt>
            <dd class="das-definition-list__definition">@Model.Status</dd>
        </dl>

        <h2 class="govuk-heading-s">Message:</h2>
        <div class="govuk-inset-text">
            @if (string.IsNullOrWhiteSpace(@Model.Message))
            {
                <span>No message added.</span>
            }
            else
            {
                @Model.Message
            }
        </div>
    </div>
</div>

<hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">


@foreach (var course in Model.Courses)
{
    <h3 class="govuk-heading-m">@course.Count x @course.DisplayCourseName</h3>
    if (@course.DraftApprenticeships.Any(x => x.HasOverlappingUln))
    {
        <div class="govuk-inset-text das-inset-text--highlight">
            <h3 class="govuk-heading-s">Apprenticeship can't have overlapping training dates</h3>
            <p>
                You must update the training dates to be able to approve.
            </p>
        </div>
    }
    if (@course.EmailOverlaps != null)
    {
        <div class="govuk-inset-text das-inset-text--highlight">
            <h3 class="govuk-heading-s">@course.EmailOverlaps.DisplayEmailOverlapsMessage</h3>
            <p>
                You must enter a unique email address for each apprentice.
            </p>
        </div>
    }
    if (@course.FundingBandExcess != null)
    {
        <div class="govuk-inset-text das-inset-text--highlight">
            <h3 class="govuk-heading-s">@course.FundingBandExcess.FundingBandCapExcessHeader</h3>
            <p>
                @course.FundingBandExcess.FundingBandCapExcessLabel
                <text><a target="_blank" href="https://www.gov.uk/government/publications/apprenticeship-funding-bands">funding band maximum</a>@course.FundingBandExcess.DisplaySingleFundingBandCap</text>
                You'll need to ask the employer to pay the difference directly to you - this can't be funded from their account.
            </p>
        </div>
    }
    <table class="govuk-table das-table--responsive">
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header das-table-cell-width-25">Name</th>
                <th scope="col" class="govuk-table__header das-table-cell-width-25">Unique learner number</th>
                <th scope="col" class="govuk-table__header das-table-cell-width-25">Date of birth</th>
                <th scope="col" class="govuk-table__header das-table-cell-width-30">Training dates</th>
                <th scope="col" class="govuk-table__header das-table-cell-width-10">Price</th>
                <th scope="col" class="govuk-table__header das-table-cell-width-10"><span class="govuk-visually-hidden">Action</span></th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">

            @foreach (var draftApprenticeship in course.DraftApprenticeships)
            {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell" data-label="Name">
                        @if (draftApprenticeship.HasOverlappingEmail)
                        {
                            <span class="das-table-cell--highlight das-breakable">@draftApprenticeship.DisplayName</span>
                        }
                        else
                        {
                            @draftApprenticeship.DisplayName
                        }
                    </td>
                    <td class="govuk-table__cell" data-label="Unique learner number">@(string.IsNullOrWhiteSpace(draftApprenticeship.ULN) ? "-" : draftApprenticeship.ULN)</td>
                    <td class="govuk-table__cell" data-label="Date of birth">@draftApprenticeship.DisplayDateOfBirth</td>
                    <td class="govuk-table__cell" data-label="Training dates">
                        @if (draftApprenticeship.HasOverlappingUln)
                        {
                            <span class="das-table-cell--highlight">
                                @draftApprenticeship.DisplayTrainingDates
                            </span>
                        }
                        else
                        {
                            @draftApprenticeship.DisplayTrainingDates
                        }
                    </td>
                    <td class="govuk-table__cell govuk-table__cell--numeric" data-label="Price">
                        @if (@draftApprenticeship.ExceedsFundingBandCap)
                        {
                            <span class="das-table-cell--highlight">
                                @draftApprenticeship.DisplayCost
                            </span>
                        }
                        else
                        {
                            @draftApprenticeship.DisplayCost
                        }
                    </td>
                    <td class="govuk-table__cell govuk-table__cell--numeric">
                        <a class="govuk-link edit-apprentice" href="@Url.Action("ViewEditDraftApprenticeship", "DraftApprenticeship", new { @draftApprenticeship.DraftApprenticeshipHashedId, @Model.CohortReference, @Model.ProviderId })">
                            @(Model.IsReadOnly ? "View" : "Edit")
                            <span class="govuk-visually-hidden">@draftApprenticeship.DisplayName's details</span>
                        </a>
                        <br /><br />
                        @if (!Model.IsReadOnly && !Model.IsLinkedToChangeOfPartyRequest)
                        {
                            <a class="govuk-link delete-apprentice"
                               href="@Url.RouteUrl(RouteNames.ApprenticeDelete, new { ProviderId = Model.ProviderId, DraftApprenticeshipHashedId = draftApprenticeship.DraftApprenticeshipHashedId, CohortReference = Model.CohortReference })">
                                Delete <span class="govuk-visually-hidden">@draftApprenticeship.DisplayName </span>
                            </a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


<table class="govuk-table">
    <tbody class="govuk-table__body">
        <tr class="govuk-table__row">
            @if (Model.IsReadOnly && Model.Courses.Count == 0)
            {
                <td class="govuk-table__cell"><p>Apprentices will appear here when the employer adds them to your cohort.</p></td>
            }
            else
            {
                <th class="govuk-table__header das-table-cell-width-80" scope="row">Total apprenticeship training price <br>(excluding VAT)</th>
                <td class="govuk-table__cell govuk-table__header--numeric das-table-cell-width-20"><strong>@Model.DisplayTotalCost</strong></td>
            }
        </tr>
    </tbody>
</table>

@if (!Model.IsReadOnly)
{
    <p>
        @if (Model.ShowAddAnotherApprenticeOption)
        {
            <a href="@Url.ReservationsLink(reservationUrl)" class="govuk-link add-apprentice">Add another apprentice</a>
        }
        <a class="govuk-link das-float-right delete-cohort" id="delete-cohort" href="@Url.Action("Delete", new { @Model.CohortReference, @Model.ProviderId })">
            Delete this cohort
        </a>

        @if (Model.AllowBulkUpload)
        {
            <br />
            <br />
            <a class="govuk-link delete-cohort" id="delete-cohort" href="@bulkUploadUrl">
                Upload apprentice(s) using a CSV file
            </a>
        }
    </p>

    <hr class="govuk-section-break govuk-section-break--l">

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <form id="submitCohort" novalidate method="post">
                <div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.Selection, "govuk-form-group--error")">
                    <fieldset class="govuk-fieldset">
                        <legend class="govuk-fieldset__legend govuk-fieldset__legend--m">
                            <h3 class="govuk-fieldset__heading">@Model.OptionsTitle</h3>
                        </legend>
                        @Html.ValidationMessageFor(m => m.Selection, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Selection) })
                        <div class="govuk-radios govuk-radios--conditional" data-module="radios">
                            @if (Model.ProviderCanApprove)
                            {
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" id="radio-approve" name="selection" type="radio" value="@CohortDetailsOptions.Approve" data-aria-controls="conditional-approve">
                                    <label class="govuk-label govuk-radios__label" for="radio-approve">
                                        Yes, approve and notify employer
                                    </label>
                                </div>
                            }
                            @if (!Model.ShowApprovalOptionMessage)
                            {
                                <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-approve">
                                    <div class="govuk-form-group">
                                        <label class="govuk-label" for="approve-details">
                                            Leave @Model.LegalEntityName a message (optional)
                                        </label>
                                        <textarea class="govuk-textarea" id="approve-details" name="approvemessage" rows="5"></textarea>
                                    </div>
                                </div>
                            }
                            <div class="govuk-radios__item">
                                <input class="govuk-radios__input" id="radio-send" name="selection" type="radio" value="@CohortDetailsOptions.Send" data-aria-controls="conditional-send">
                                <label class="govuk-label govuk-radios__label" for="radio-send">
                                    @Model.SendBackToEmployerOptionMessage
                                </label>
                            </div>
                            <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="conditional-send">
                                <div class="govuk-form-group">
                                    <label class="govuk-label" for="send-details">
                                        Leave @Model.LegalEntityName a message (optional)
                                    </label>
                                    <textarea class="govuk-textarea" id="send-details" name="sendmessage" rows="5"></textarea>
                                </div>
                            </div>

                            @if (!Model.ProviderCanApprove)
                            {
                                <div class="govuk-radios__item">
                                    <input class="govuk-radios__input" id="radio-home" name="selection" type="radio" value="@CohortDetailsOptions.ApprenticeRequest">
                                    <label class="govuk-label govuk-radios__label" for="radio-home">
                                        No, save and return to apprentice requests
                                    </label>
                                </div>
                            }

                        </div>
                    </fieldset>
                </div>

                <button type="submit" id="continue-button" class="govuk-button">Save and submit</button>
                <br />
                <a class="govuk-link" id="save-and-exit-cohort" href="@Url.Action("Cohorts", new { @Model.ProviderId })">
                    Save and exit
                </a>

            </form>
        </div>
    </div>
}

@section breadcrumb
    {
    <div class="das-js-back-link"></div>
}
