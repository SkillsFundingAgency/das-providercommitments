@using SFA.DAS.Commitments.Shared.Extensions
@using SFA.DAS.ProviderCommitments.Web.Models
@model SFA.DAS.ProviderCommitments.Web.Models.ManageApprenticesViewModel

@{
    ViewData["Title"] = "Manage Your Apprentices";
}

<h1 class="govuk-heading-xl">Manage your apprentices</h1>

@if (!Model.AnyApprenticeships)
{
    <div class="govuk-inset-text das-inset-text--filled das-inset-text--highlight">
        <p>Your apprentices will appear here once you and the employer approve their details.</p>
    </div>
}
else
{
    <a class="govuk-link" href="@Url.RouteUrl("Download",new {providerId = Model.ProviderId})" aria-label="Download all data">Download all data (CSV)</a>

    <table class="govuk-table das-table--responsive das-table--double-arrows">
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                <th scope="col" class="govuk-table__header">
                    <a href="@Url.RouteUrl("Index", new {providerId = Model.ProviderId, sortField = "FirstName", reverseSort = Model.SortField.ToLower() == "firstname" && !Model.ReverseSort})" title="Sort the table by name" class="@(Model.SortField=="FirstName" ? Model.SortedByHeaderClassName: ManageApprenticesViewModel.HeaderClassName)">
                        Apprentice name
                    </a>
                </th>
                <th scope="col" class="govuk-table__header">
                    <a href="@Url.RouteUrl("Index", new {providerId = Model.ProviderId, sortField = "Uln", reverseSort = Model.SortField.ToLower() == "uln" && !Model.ReverseSort})" title="Sort the table by ULN" class="@(Model.SortField=="Uln" ? Model.SortedByHeaderClassName: ManageApprenticesViewModel.HeaderClassName)">
                        ULN
                    </a>
                </th>
                <th scope="col" class="govuk-table__header">
                    <a href="@Url.RouteUrl("Index", new {providerId = Model.ProviderId, sortField = "LegalEntityName", reverseSort = Model.SortField.ToLower() == "legalentityname" && !Model.ReverseSort})" title="Sort the table by employer name" class="@(Model.SortField=="LegalEntityName" ? Model.SortedByHeaderClassName: ManageApprenticesViewModel.HeaderClassName)">
                        Employer
                    </a>
                </th>
                <th scope="col" class="govuk-table__header">
                    <a href="@Url.RouteUrl("Index", new {providerId = Model.ProviderId, sortField = "CourseName", reverseSort = Model.SortField.ToLower() == "coursename" && !Model.ReverseSort})" title="Sort the table by course name" class="@(Model.SortField=="CourseName" ? Model.SortedByHeaderClassName: ManageApprenticesViewModel.HeaderClassName)">
                        Apprenticeship training course
                    </a>
                </th>
                <th scope="col" class="govuk-table__header">
                    <a href="@Url.RouteUrl("Index", new {providerId = Model.ProviderId, sortField = "StartDate", reverseSort = Model.SortField.ToLower() == "startdate" && !Model.ReverseSort})" title="Sort the table by start date" class="@(Model.SortField=="StartDate" ? Model.SortedByHeaderClassName: ManageApprenticesViewModel.HeaderClassName)">
                        Planned start date
                    </a>
                </th>
                <th scope="col" class="govuk-table__header">
                    <a href="@Url.RouteUrl("Index", new {providerId = Model.ProviderId, sortField = "EndDate", reverseSort = Model.SortField.ToLower() == "enddate" && !Model.ReverseSort})" title="Sort the table by end date" class="@(Model.SortField=="EndDate" ? Model.SortedByHeaderClassName: ManageApprenticesViewModel.HeaderClassName)">
                        Planned end date
                    </a>
                </th>
                <th scope="col" class="govuk-table__header">
                    <a href="@Url.RouteUrl("Index", new {providerId = Model.ProviderId, sortField = "PaymentStatus", reverseSort = Model.SortField.ToLower() == "paymentstatus" && !Model.ReverseSort})" title="Sort the table by payment status" class="@(Model.SortField=="PaymentStatus" ? Model.SortedByHeaderClassName: ManageApprenticesViewModel.HeaderClassName)">
                        Status
                    </a>
                </th>
                <th scope="col" class="govuk-table__header">
                    <a href="@Url.RouteUrl("Index", new {providerId = Model.ProviderId, sortField = "DataLockStatus", reverseSort = Model.SortField.ToLower() == "datalockstatus" && !Model.ReverseSort})" title="Sort the table by alerts" class="@(Model.SortField=="DataLockStatus" ? Model.SortedByHeaderClassName: ManageApprenticesViewModel.HeaderClassName)">
                        Alerts
                    </a>
                </th>
            </tr>
        </thead>
        <tbody class="govuk-table__body">
            @foreach (var apprenticeships in Model.Apprenticeships)
            {
                <tr class="govuk-table__row">
                    <td class="govuk-table__cell" data-label="Apprentice name">
                        @apprenticeships.FirstName @apprenticeships.LastName
                    </td>
                    <td class="govuk-table__cell" data-label="ULN">
                        @apprenticeships.Uln
                    </td>
                    <td class="govuk-table__cell" data-label="Employer">
                        @apprenticeships.EmployerName
                    </td>
                    <td class="govuk-table__cell" data-label="Apprenticeship training course">
                        @apprenticeships.CourseName
                    </td>
                    <td class="govuk-table__cell" data-label="Planned start date">
                        @apprenticeships.StartDate.ToGdsFormatWithoutDay()
                    </td>
                    <td class="govuk-table__cell" data-label="Planned end date">
                        @apprenticeships.EndDate.ToGdsFormatWithoutDay()
                    </td>
                    <td class="govuk-table__cell" data-label="Status">
                        @apprenticeships.PaymentStatus
                    </td>
                    <td class="govuk-table__cell" data-label="Alerts">
                        @if (apprenticeships.Alerts.Any())
                        {
                            @apprenticeships.Alerts.Aggregate((a, b) => $"{a} {Environment.NewLine} {b}")
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@section breadcrumb {
    <a href="javascript:history.back()" class="govuk-back-link">Back</a>
}