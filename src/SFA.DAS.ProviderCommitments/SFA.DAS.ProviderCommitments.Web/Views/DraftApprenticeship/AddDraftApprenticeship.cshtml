@model SFA.DAS.ProviderCommitments.Web.Models.AddDraftApprenticeshipViewModel

@{
    ViewData["Title"] = "Apprenticeships";
    ViewBag.GaData.Vpv = "/unapproved/apprentices/add-apprentice";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <partial name="_ValidationSummary" />
        <h1 class="govuk-heading-xl">Add apprentice details</h1>
        <div class="govuk-inset-text">
            <p class="govuk-body">You must add the apprentice’s first and last names - fill in as many other fields as you can. You'll be able to return later to make changes or add more information. </p>
            <p class="govuk-body">You can only receive payments for this apprentice if:</p>
            <ul class="govuk-list govuk-list--bullet">
                <li>all the fields have been completed - either by yourself or the employer</li>
                <li>the data matches the individualised learner record (ILR) data you send us</li>
            </ul>
        </div>

        <dl class="das-definition-list">
            <dt class="das-definition-list__title">Employer</dt>
            <dd class="das-definition-list__definition">@Model.Employer</dd>
        </dl>
        <form id="addApprenticeship" novalidate method="post">
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.EmployerAccountLegalEntityPublicHashedId)

            <partial name="_DraftApprenticeship" for="@Model" />

            <button type="submit" class="govuk-button">Add</button>
            
            @if (Model.CohortReference != null)
            {
                <p class="govuk-body govuk-!-margin-bottom-0">
                    <a class="govuk-body govuk-link" href="@Url.ProviderApprenticeshipServiceLink($"{Model.ProviderId}/apprentices/{Model.CohortReference}/details")">Cancel</a>
                </p>
            }
        </form>

    </div>
</div>

@*
    @section  Scripts
    {
        <script src="/libs/accessible-autocomplete/accessible-autocomplete.min.js"></script>
        <script>
            accessibleAutocomplete.enhanceSelectElement({
                selectElement: document.querySelector('#CourseCode')
            })
        </script>
    }
*@
