@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.CommitmentsV2.Types
@model SFA.DAS.ProviderCommitments.Web.Models.ViewDraftApprenticeshipViewModel

@{
    ViewData["Title"] = "Apprenticeships";
    ViewBag.GaData.Vpv = "/unapproved/cohort/apprentices/view";

    var startDateLabel = Model.DeliveryModel == null ? "Planned training start date" : "Planned apprenticeship training start date";
    var endDateLabel = Model.DeliveryModel == null ? "Planned training end date" : "Projected apprenticeship training finish date";
}

<h1 class="govuk-heading-xl">View apprentice details</h1>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        <h2 class="govuk-heading-m">Personal details</h2>
        <dl class="govuk-summary-list">

            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Unique learner number
                </dt>
                <dd class="govuk-summary-list__value">
                    @DisplayOptionalField(Model.Uln)
                </dd>
            </div>

            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    First name
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.FirstName
                </dd>
            </div>

            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Last name
                </dt>
                <dd class="govuk-summary-list__value">
                    @Model.LastName
                </dd>
            </div>
        
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Email address
                </dt>
                <dd class="govuk-summary-list__value">
                    @DisplayOptionalField(Model.Email)
                </dd>
            </div>
        
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Date of birth
                </dt>
                <dd class="govuk-summary-list__value">
                    @DisplayOptionalField(Model.DateOfBirth)
                </dd>
            </div>
        </dl>

        <h2 class="govuk-heading-m">Training details</h2>
        <dl class="govuk-summary-list">

            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Training course
                </dt>
                <dd class="govuk-summary-list__value">
                    @DisplayOptionalField(Model.TrainingCourse)
                </dd>
            </div>

            @if (Model.DeliveryModel != null)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Delivery model
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @Model.DeliveryModel
                    </dd>
                </div>
            }
            @if (!string.IsNullOrEmpty(Model.TrainingCourseVersion))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Version
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @DisplayOptionalField(Model.TrainingCourseVersion)
                    </dd>
                </div>
            }
            @if (Model.HasTrainingCourseOption)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Option
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @DisplayOptionalField(Model.TrainingCourseOption)
                    </dd>
                </div>
            }
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @startDateLabel
                </dt>
                <dd class="govuk-summary-list__value">
                    @DisplayOptionalEstimatedDate(Model.StartDate)
                </dd>
            </div>
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    @endDateLabel
                </dt>
                <dd class="govuk-summary-list__value">
                    @DisplayOptionalEstimatedDate(Model.EndDate)
                </dd>
            </div>

            @if (Model.DeliveryModel != null)
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Planned end date for this employment
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @DisplayOptionalEstimatedDate(Model.EmploymentEndDate)
                    </dd>
                </div>
            }
            @if (Model.DeliveryModel.Equals(DeliveryModel.PortableFlexiJob))
            {
                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Training price for this employment
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @DisplayCost(Model.EmploymentPrice)
                    </dd>
                </div>

                <div class="govuk-summary-list__row">
                    <dt class="govuk-summary-list__key">
                        Total agreed apprenticeship price
                    </dt>
                    <dd class="govuk-summary-list__value">
                        @DisplayCost(Model.Cost)
                    </dd>
                </div>
            }
            <div class="govuk-summary-list__row">
                <dt class="govuk-summary-list__key">
                    Reference
                </dt>
                <dd class="govuk-summary-list__value">
                    @DisplayOptionalField(Model.Reference)
                </dd>
            </div>
        </dl>

        @if (Model.RecognisePriorLearning.HasValue)
        {
            <h2 class="govuk-heading-m">Prior learning details</h2>
            <dl class="govuk-summary-list">

                @if (Model.RecognisePriorLearning == true)
                {
                    if (Model.TrainingTotalHours.HasValue)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Total off-the-job training time for this apprenticeship standard
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.TrainingTotalHours.Value.ToString("N0") @PluraliseString(Model.DurationReducedByHours.Value, "hour")
                            </dd>
                        </div>
                    }
                    if (Model.DurationReducedByHours.HasValue)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Off-the-job training time reduction due to prior learning
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.DurationReducedByHours.Value.ToString("N0") @PluraliseString(Model.DurationReducedByHours.Value, "hour")
                            </dd>
                        </div>
                    }
                    if (Model.DurationReducedBy.HasValue)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Duration reduction due to prior learning
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.DurationReducedBy.Value.ToString() @PluraliseString(Model.DurationReducedBy.Value, "week")
                            </dd>
                        </div>
                    }
                    if (Model.PriceReducedBy.HasValue)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Price reduction due to prior learning
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @DisplayCost(@Model.PriceReducedBy)
                            </dd>
                        </div>
                    }
                }
                else
                {
                    <dt>The apprentice has no recognised prior learning.</dt>
                }
            </dl>
        }

    </div>
</div>

@*<a class="govuk-body govuk-link" href="@Url.ProviderApprenticeshipServiceLink($"{Model.ProviderId}/apprentices/{Model.CohortReference}/details")">Return to cohort view</a>*@
<a class="govuk-body govuk-link" href="@Url.Action("Details", "Cohort", new { Model.ProviderId, Model.CohortReference })">Return to cohort view</a>

@functions
{
    private string DisplayOptionalField(string value)
    {
        return !string.IsNullOrWhiteSpace(value) ? value : "--";
    }

    private string DisplayOptionalField(DateTime? value)
    {
        return value.HasValue ? value.Value.ToGdsFormat() : "--";
    }

    private string DisplayOptionalEstimatedDate(DateTime? value)
    {
        return value.HasValue ? $"{value:MMMM yyyy}" : "--";
    }

    private string DisplayCost(int? value)
    {
        return value.HasValue ? value.Value.ToGdsCostFormat() : "--";
    }

    string PluraliseString(int count, string str)
    {
        return count > 1 ? $"{str}s" : str;
    }
}

@section breadcrumb
{
    <a id="back-link" class="govuk-back-link" href="@Url.Action("Details", "Cohort", new { Model.ProviderId, Model.CohortReference })">Back</a>
}