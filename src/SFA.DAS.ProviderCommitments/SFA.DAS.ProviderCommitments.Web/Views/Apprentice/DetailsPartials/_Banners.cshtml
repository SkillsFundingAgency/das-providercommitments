@using SFA.DAS.CommitmentsV2.Types
@using SFA.DAS.Provider.Shared.UI.Models.Flags
@using SFA.DAS.ProviderCommitments.Enums
@using SFA.DAS.ProviderCommitments.Web.Models.Apprentice
@using SFA.DAS.ProviderCommitments.Web.Models.Shared
@model SFA.DAS.ProviderCommitments.Web.Models.Apprentice.DetailsViewModel

@if (Model.ShowActionRequiredBanner)
{
    <div class="govuk-notification-banner" role="region" aria-labelledby="govuk-notification-banner-title"
         data-module="govuk-notification-banner">
        <div class="govuk-notification-banner__header">
            <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                Action required
            </h2>
        </div>
        <div class="govuk-notification-banner__content">
            <p class="govuk-notification-banner__heading">
                @if (Model.HasEmployerPendingUpdate)
                {
                    <partial name="DetailsPartials/_PendingEmployerUpdateBanner" />
                }

                @if (Model.HasPendingChangeOfPartyRequest && Model.PendingChangeOfPartyRequestWithParty ==
               Party.Provider)
                {
                    <partial name="DetailsPartials/_PendingChangeOfPartyRequestBanner" />
                }

                @if (Model.DataLockStatus == DetailsViewModel.DataLockSummaryStatus.HasUnresolvedDataLocks)
                {
                    <partial name="DetailsPartials/_DataLockBanner" />
                }
            </p>
        </div>
    </div>
}

@if (Model.ShowChangesToThisApprenticeshipBanner)
{
    <h2 class="govuk-heading-m">Changes to this apprenticeship</h2>

    @if (Model.HasProviderPendingUpdate)
    {
        <partial name="DetailsPartials/_PendingProviderUpdateBanner" />
    }

    @if (Model.HasPendingChangeOfPartyRequest && Model.PendingChangeOfPartyRequestWithParty == Party.Employer)
    {
        <partial name="DetailsPartials/_PendingChangeOfPartyRequestBanner" />
    }

    @if (Model.DataLockStatus == DetailsViewModel.DataLockSummaryStatus.AwaitingTriage)
    {
        <partial name="DetailsPartials/_DataLockBanner" />
    }
}

@if (Model.HasPendingPriceChange && Model.PendingPriceChange.PriceChangeInitiator == ChangeInitiatedBy.Employer)
{
    <partial name="DetailsPartials/_PendingEmployerChangeOfPriceRequestBanner" />
}

@if (Model.ShowBannersFlags.IsFlagSet(ApprenticeDetailsBanners.ChangeOfPriceRequestSent))
{
    <partial name="DetailsPartials/_ChangeOfPriceRequestSentBanner" />
}

@if (Model.ShowBannersFlags.IsFlagSet(ApprenticeDetailsBanners.ChangeOfStartDateSent))
{
    <partial name="DetailsPartials/_ChangeOfStartDateRequestSentBanner" />
}

@if (Model.ShowBannersFlags.IsFlagSet(ApprenticeDetailsBanners.ChangeOfStartDateCancelled))
{
    var changeOfStartDateCancelledBannerModel = new SuccessBannerModel("startdate-change-cancelled-banner", "Your request to change the start date has been cancelled", "The employer has been notified.");
    <partial name="DetailsPartials/_SuccessBanner" model="changeOfStartDateCancelledBannerModel" />
}

@if (Model.ShowBannersFlags.IsFlagSet(ApprenticeDetailsBanners.ChangeOfPriceCancelled))
{
    var changeOfPriceCancelledBannerModel = new SuccessBannerModel("price-change-cancelled-banner", "Your request to change the price has been cancelled", "");
    <partial name="DetailsPartials/_SuccessBanner" model="changeOfPriceCancelledBannerModel" />
}

@if (Model.ShowBannersFlags.IsFlagSet(ApprenticeDetailsBanners.ChangeOfPriceApproved))
{
    var changeOfPriceApprovedBannerModel = new SuccessBannerModel("change-of-price-approved-banner", "Changes Approved", "The Employer has been notified of the approval.");
    <partial name="DetailsPartials/_SuccessBanner" model="changeOfPriceApprovedBannerModel" />
}

@if (Model.ShowBannersFlags.IsFlagSet(ApprenticeDetailsBanners.ChangeOfPriceAutoApproved))
{
    var changeOfPriceAutoApprovedBannerModel = new SuccessBannerModel("change-of-price-auto-approved-banner", "Training and end-point assessment prices have been updated", "");
    <partial name="DetailsPartials/_SuccessBanner" model="changeOfPriceAutoApprovedBannerModel" />
}

@if (Model.ShowBannersFlags.IsFlagSet(ApprenticeDetailsBanners.ChangeOfPriceRejected))
{
    var changeOfPriceRejectedBannerModel = new SuccessBannerModel("change-of-price-rejected-banner", "Price change rejected", "The employer has been notified that you have rejected their change of price request.");
    <partial name="DetailsPartials/_SuccessBanner" model="changeOfPriceRejectedBannerModel" />
}

@if (Model.PaymentStatus.PaymentsFrozen && Model.IsOnFlexiPaymentPilot.GetValueOrDefault())
{
    <partial name="DetailsPartials/_PaymentsFrozenBanner" />
}