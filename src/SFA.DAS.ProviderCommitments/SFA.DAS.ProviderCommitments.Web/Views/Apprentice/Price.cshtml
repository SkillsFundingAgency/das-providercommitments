@using Microsoft.AspNetCore.Routing
@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.ProviderCommitments.Infrastructure.OuterApi.Types
@using SFA.DAS.ProviderCommitments.Web.RouteValues
@model SFA.DAS.ProviderCommitments.Web.Models.Apprentice.PriceViewModel

@{
    var isRegular = @Model.DeliveryModel != DeliveryModel.PortableFlexiJob;
    ViewBag.Title = isRegular ? "New agreed training price" : "Agreed training prices for the employment and the apprenticeship";
    ViewBag.GaData.Vpv = "/apprentices/apprentice/change-employer/price";
    ViewBag.GaData.Org = Model.LegalEntityName;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <partial name="_ValidationSummary"/>

        <h1 asp-show="@isRegular" class="govuk-heading-l">@ViewBag.Title</h1>
        <h2 asp-show="!isRegular" class="govuk-heading-l">Agreed prices</h2>

        <form novalidate method="post">
            <input type="hidden" asp-for="CacheKey"/>
            <input type="hidden" asp-for="ApprenticeshipStatus"/>
            <input type="hidden" asp-for="ProviderId"/>

            <div asp-show="!isRegular" class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.EmploymentPrice, "govuk-form-group--error ")">
                <p>Agreed training price for this period of employment (excluding VAT)</p>
                <span class="govuk-hint">Enter the price in whole pounds. For example, for &pound;1,000 enter 1000</span>
                @Html.ValidationMessageFor(m => m.EmploymentPrice, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.EmploymentPrice) })
                <input asp-for="EmploymentPrice" class="govuk-input govuk-!-width-one-third @Html.AddClassIfPropertyInError(x => x.EmploymentPrice, "govuk-input--error input-validation-error")"/>
            </div>

            <div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.Price, "govuk-form-group--error ")">
                <p asp-show="@isRegular">This is the price agreed between you and the new employer to complete the remainder of the apprenticeship training and assessment</p>
                <p asp-show="!isRegular">Total agreed apprenticeship price (excluding VAT)</p>
                <label asp-show="@isRegular" class="govuk-label" for="price">Enter the price in whole pounds</label>
                <span asp-show="@isRegular" class="govuk-hint">For example, for &pound;1,500 enter 1500</span>
                <span asp-show="!isRegular" class="govuk-hint">Enter the price in whole pounds. For example, for &pound;1,500 enter 1500</span>
                @Html.ValidationMessageFor(m => m.Price, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Price) })
                <div class="govuk-input__wrapper">
                    <div class="govuk-input__prefix" aria-hidden="true">£</div>
                    <input asp-for="Price" class="govuk-input govuk-!-width-one-third @Html.AddClassIfPropertyInError(x => x.Price, "govuk-input--error input-validation-error")"/>
                </div>
            </div>

            <button id="save-and-continue-button" class="govuk-button" type="submit" data-module="govuk-button">
                Continue
            </button>
        </form>
    </div>
</div>

@section breadcrumb
{
    <div class="das-js-back-link"></div>
}