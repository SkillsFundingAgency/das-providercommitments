@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.ProviderCommitments.Web.RouteValues
@model SFA.DAS.ProviderCommitments.Web.Models.Apprentice.PriceViewModel

@{
    ViewBag.Title = "What's the new agreed apprenticeship price?";
    ViewBag.GaData.Vpv = "/apprentices/change-employer/price";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <partial name="_ValidationSummary" />
        <h1 class="govuk-heading-xl">@ViewBag.Title</h1>
        <p>This is the price agreed between you and the new employer to complete the remainder of the apprenticeship training and assessment.</p>
        <form method="post">
            @Html.HiddenFor(x => x.EmployerAccountLegalEntityPublicHashedId)
            @Html.HiddenFor(x => x.StartDate)
            <div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.Price, "govuk-form-group--error ")">
                @Html.ValidationMessageFor(m => m.Price, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Price) })
                <label class="govuk-label" for="price">Enter the price in whole pounds</label>
                <span class="govuk-hint">For example, for &pound;1,500 enter 1500</span>
                <input asp-for="Price" class="govuk-input govuk-!-width-one-third @Html.AddClassIfPropertyInError(x=>x.Price, "govuk-input--error input-validation-error")" />
            </div>
            <button id="save-and-continue-button" class="govuk-button" type="submit" data-module="govuk-button">
                Save and continue
            </button>
        </form>
    </div>
</div>

@section breadcrumb
{
    <a id="back-link" class="govuk-back-link" href="@Url.RouteUrl(RouteNames.ApprenticeChangeStartDate, new { Model.EmployerAccountLegalEntityPublicHashedId.Length, Model.StartDate})">Back</a>
}