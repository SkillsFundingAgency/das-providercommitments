@using Microsoft.AspNetCore.Routing
@using Newtonsoft.Json
@using SFA.DAS.ProviderCommitments.Web.RouteValues
@using SFA.DAS.ProviderCommitments.Web.Models.Shared
@model SFA.DAS.ProviderCommitments.Web.Models.Apprentice.SelectEmployerViewModel

@{
    ViewData["Title"] = "Choose an employer";
    ViewBag.GaData.Vpv = "/apprentices/apprentice/change-employer/select-employer";
    ViewBag.GaData.Org = Model.LegalEntityName;

     var backRouteData = new
     {    
         apprenticeshipHashedId = Context.GetRouteValue("apprenticeshipHashedId"),
         providerId = Context.GetRouteValue("providerId"),
     }; 
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-xl">Choose a new employer for this apprentice</h1>

        <div class="govuk-inset-text">
            The new employer must have <a href="https://help.apprenticeships.education.gov.uk/hc/en-gb/articles/360009563399-Training-provider-permissions-training-provider" target="_blank">set up permissions</a> for you in order to appear in this list.
        </div>

        <form method="get">
            <div class="govuk-form-group">
                <label class="govuk-label" for="searchTerm">Search employer name or account name</label>
                <div class="das-search-form__group">
                    <input class="govuk-input das-search-form__input app-input-autocomplete" id="searchTerm" name="searchTerm" type="text" value="@Model.SelectEmployerFilterModel.SearchTerm">
                    <div class="das-search-form__button-wrap">
                        <button class="govuk-button das-search-form__button" type="submit">Search</button>
                    </div>
                </div>
            </div>

            <input type="hidden" value="@Model.SelectEmployerFilterModel.CurrentlySortedByField" name="SortField" />
            <input type="hidden" value="@Model.SelectEmployerFilterModel.ReverseSort.ToString()" name="ReverseSort" />

            @if (!string.IsNullOrWhiteSpace(Model.SelectEmployerFilterModel.SearchTerm))
            {
                <p class="govuk-body"><a class="govuk-link govuk-link--no-visited-state" asp-route="@RouteNames.ApprenticeSelectEmployer">Clear search</a></p>
            }

            @if (Model.AccountProviderLegalEntities.Count > 0)
            {
                <table class="govuk-table das-table--responsive das-table--double-arrows">
                    <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th scope="col" class="govuk-table__header das-table-cell-width-35">
                                <a class="@Model.SelectEmployerFilterModel.CssClassForArrowDirection(SelectEmployerFilterModel.EmployerAccountLegalEntityNameConst)"
                                   title="Sort by employer name"
                                   asp-route="@RouteNames.ApprenticeSelectEmployer"
                                   asp-all-route-data="@Model.SelectEmployerFilterModel.BuildSortRouteData(SelectEmployerFilterModel.EmployerAccountLegalEntityNameConst)">
                                    Employer
                                </a>

                            </th>
                            <th scope="col" class="govuk-table__header das-table-cell-width-35">
                                <a class="@Model.SelectEmployerFilterModel.CssClassForArrowDirection(SelectEmployerFilterModel.EmployerAccountNameConst)"
                                   title="Sort by account name"
                                   asp-route="@RouteNames.ApprenticeSelectEmployer"
                                   asp-all-route-data="@Model.SelectEmployerFilterModel.BuildSortRouteData(SelectEmployerFilterModel.EmployerAccountNameConst)">
                                    Account name
                                </a>
                            </th>
                            <th scope="col" class="govuk-table__header das-table-cell-width-20">Agreement ID</th>
                            <th scope="col" class="govuk-table__header das-table-cell-width-10  govuk-table__header--numeric"><span class="govuk-visually-hidden">Action</span></th>
                        </tr>
                    </thead>
                    <tbody class="govuk-table__body">

                        @foreach (var viewModel in Model.AccountProviderLegalEntities)
                        {
                            <tr class="govuk-table__row">
                                <td class="govuk-table__cell" data-label="Employer">@viewModel.EmployerAccountLegalEntityName</td>
                                <td class="govuk-table__cell" data-label="Account name">@viewModel.EmployerAccountName</td>
                                <td class="govuk-table__cell" data-label="Agreement ID">@viewModel.EmployerAccountLegalEntityPublicHashedId</td>
                                <td class="govuk-table__cell govuk-table__cell--numeric" data-label="Link">
                                    @{
                                        var routeData = new
                                        {
                                            viewModel.EmployerAccountLegalEntityPublicHashedId,
                                            apprenticeshipHashedId = Context.GetRouteValue("apprenticeshipHashedId"),
                                            providerId = Context.GetRouteValue("providerId"),
                                        };
                                    }
                                    <a href="@Url.RouteUrl(RouteNames.ApprenticeConfirmEmployer, routeData)">Select</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="govuk-body">0 employers match <b>'@Model.SelectEmployerFilterModel.SearchTerm'</b></p>
            }
        </form>
    </div>
</div>

@section breadcrumb
{
    <a id="back-link" class="govuk-back-link" href="@Url.RouteUrl(RouteNames.ChangeEmployerInform, backRouteData)">Back</a>
}

<script>
    var autoCompleteSource = @Html.Raw(JsonConvert.SerializeObject(Model.SelectEmployerFilterModel.Employers));
</script>