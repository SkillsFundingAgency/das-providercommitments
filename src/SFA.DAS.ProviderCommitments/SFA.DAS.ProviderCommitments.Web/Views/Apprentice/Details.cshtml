@model SFA.DAS.ProviderCommitments.Web.Models.Apprentice.DetailsViewModel
@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.CommitmentsV2.Types
@using SFA.DAS.ProviderCommitments.Enums
@using SFA.DAS.ProviderCommitments.Features
@using SFA.DAS.ProviderCommitments.Web.Extensions
@using SFA.DAS.ProviderCommitments.Web.Helpers
@using SFA.DAS.ProviderCommitments.Web.Models.Apprentice
@using SFA.DAS.ProviderCommitments.Web.RouteValues
@using static SFA.DAS.ProviderCommitments.Web.Models.Apprentice.DetailsViewModel
@using IAuthorizationService = SFA.DAS.ProviderCommitments.Interfaces.IAuthorizationService

@inject IAuthorizationService AuthorisationService

@{
    ViewData["Title"] = "Apprentice Details";
    ViewBag.GaData.Vpv = "/apprentices/apprentice/details";
    ViewBag.GaData.Org = Model.Employer;
}

<div class="govuk-grid-row govuk-!-margin-bottom-2">
    <div class="govuk-grid-column-two-thirds">
        @if (Model.ShowActionRequiredBanner)
        {
            <div class="govuk-notification-banner" role="region" aria-labelledby="govuk-notification-banner-title"
                data-module="govuk-notification-banner">
                <div class="govuk-notification-banner__header">
                    <h2 class="govuk-notification-banner__title" id="govuk-notification-banner-title">
                        Action required
                    </h2>
                </div>
                <div class="govuk-notification-banner__content">
                    <p class="govuk-notification-banner__heading">
                        @if (Model.HasEmployerPendingUpdate)
                        {
                            <partial name="DetailsPartials/_PendingEmployerUpdateBanner" />
                        }

                        @if (Model.HasPendingChangeOfPartyRequest && Model.PendingChangeOfPartyRequestWithParty ==
                       Party.Provider)
                        {
                            <partial name="DetailsPartials/_PendingChangeOfPartyRequestBanner" />
                        }

                        @if (Model.DataLockStatus == DetailsViewModel.DataLockSummaryStatus.HasUnresolvedDataLocks)
                        {
                            <partial name="DetailsPartials/_DataLockBanner" />
                        }
                    </p>
                </div>
            </div>
        }

        @if (Model.ShowChangesToThisApprenticeshipBanner)
        {
            <h2 class="govuk-heading-m">Changes to this apprenticeship</h2>

            @if (Model.HasProviderPendingUpdate)
            {
                <partial name="DetailsPartials/_PendingProviderUpdateBanner" />
            }

            @if (Model.HasPendingChangeOfPartyRequest && Model.PendingChangeOfPartyRequestWithParty == Party.Employer)
            {
                <partial name="DetailsPartials/_PendingChangeOfPartyRequestBanner" />
            }

            @if (Model.DataLockStatus == DetailsViewModel.DataLockSummaryStatus.AwaitingTriage)
            {
                <partial name="DetailsPartials/_DataLockBanner" />
            }
        }

        @if (Model.HasPendingPriceChange && Model.PendingPriceChange.PriceChangeInitiator == ChangeInitiatedBy.Employer)
        {
            <partial name="DetailsPartials/_PendingEmployerChangeOfPriceRequestBanner" />
        }

        @if (Model.ShowChangeOfPriceRequestSent)
        {
            <partial name="DetailsPartials/_ChangeOfPriceRequestSentBanner" />
        }

        @if (Model.ShowBannersFlags.IsFlagSet(Banners.ChangeOfStartDateSent))
        {
            <partial name="DetailsPartials/_ChangeOfStartDateRequestSentBanner" />
        }

        @if (Model.ShowBannersFlags.IsFlagSet(Banners.ChangeOfStartDateCancelled))
        {
            <partial name="DetailsPartials/_ChangeOfStartDateCancelledBanner" />
        }

        @if (Model.ShowPriceChangeCancelled)
        {
            <partial name="DetailsPartials/_PriceChangeCancelledBanner" />
        }
        @if (Model.ShowPriceChangeApproved)
        {
            <partial name="DetailsPartials/_PriceChangeApprovedBanner" />
        }
        @if (Model.ShowChangeOfPriceAutoApproved)
        {
            <partial name="DetailsPartials/_PriceChangeAutoApprovedBanner" />
        }
        @if (Model.ShowPriceChangeRejected)
        {
            <partial name="DetailsPartials/_PriceChangeRejectedBanner" />
        }
        @if (Model.PaymentStatus.PaymentsFrozen && Model.IsOnFlexiPaymentPilot.GetValueOrDefault())
        {
            <partial name="DetailsPartials/_PaymentsFrozenBanner" />
        }
        <h1 class="govuk-heading-xl">@Model.ApprenticeName</h1>

        @if (await AuthorisationService.IsAuthorizedAsync(ProviderFeature.FlexiblePaymentsPilot) && Model.IsOnFlexiPaymentPilot.GetValueOrDefault() && Model.DataLockStatus == DetailsViewModel.DataLockSummaryStatus.None)
        {
            <div class="govuk-inset-text">
                This apprentice is part of the simplified payments pilot. To change these details, you must contact <a
                    class="govuk-link"
                    href="mailto:simplifiedpaymentspilot@education.gov.uk">simplifiedpaymentspilot@education.gov.uk</a>. We
                aim to respond within 2 working days.
            </div>
        }

        @if (Model.ShowChangeEmployerLink && Model.Status != ApprenticeshipStatus.Completed)
        {
            <partial name="DetailsPartials/_HelpWithChangeOfCircumstances" />
        }

        @if (Model.ConfirmationStatus == ConfirmationStatus.Overdue)
        {
            <details class="govuk-details" data-module="govuk-details">
                <summary class="govuk-details__summary">
                    <span class="govuk-details__summary-text">
                        Help with your apprentice’s overdue confirmation
                    </span>
                </summary>
                <div class="govuk-details__text">
                    <p class="govuk-body">
                        If your apprentice has not confirmed their apprenticeship details within the 14 day deadline, you
                        should:

                    <ul class="govuk-list govuk-list--bullet">
                        <li>
                            contact the apprentice to complete their apprenticeship confirmation
                        </li>
                        <div>
                            Or
                        </div>
                        <li>
                            contact the apprentice’s employer to ask the apprentice to complete their apprenticeship
                            confirmation
                        </li>
                    </ul>
                    </p>
                </div>
            </details>
        }

        <h2 class="govuk-heading-m">Apprentice status</h2>

        <table class="govuk-table">
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header das-table-cell-width-45">Status</th>
                    <td id="apprenticeship-status" class="govuk-table__cell das-table-cell-width-55">
                        @Model.Status.GetDescription()</td>
                </tr>
                @if (await AuthorisationService.IsAuthorizedAsync(ProviderFeature.FlexiblePaymentsPilot))
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header das-table-cell-width-45">Simplified payments pilot</th>
                        <td id="apprenticeship-payment-pilot" class="govuk-table__cell das-table-cell-width-55">
                            @Model.IsOnFlexiPaymentPilotDisplay</td>
                    </tr>
                }
                @if (Model.IsOnFlexiPaymentPilot.GetValueOrDefault())
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header das-table-cell-width-45">Provider payments status</th>
                        <td id="provider-payments-status" class="govuk-table__cell das-table-cell-width-55">
                            <strong class="govuk-tag govuk-tag--blue">@Model.PaymentStatus.Status</strong>
                        </td>
                    </tr>
                }
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header das-table-cell-width-45">Apprentice confirmation</th>
                    <td id="apprenticeship-confirmation" class="govuk-table__cell das-table-cell-width-55">
                        @Model.ConfirmationStatus.ToDisplayString()</td>
                </tr>
                @if (Model.Status == ApprenticeshipStatus.Stopped)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Stop applies from</th>
                        <td id="apprenticeship-stop-date" class="govuk-table__cell">
                            @Model.StopDate.Value.ToGdsFormatWithoutDay()</td>
                    </tr>
                }

                @if (Model.Status == ApprenticeshipStatus.Paused)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Apprenticeship pause date</th>
                        <td id="apprenticeship-pause-date" class="govuk-table__cell">@Model.PauseDate.Value.ToGdsFormat()
                        </td>
                    </tr>
                }

                @if (Model.Status == ApprenticeshipStatus.Completed)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Completion payment month</th>
                        <td id="apprenticeship-completed-date" class="govuk-table__cell">
                            @Model.CompletionDate.Value.ToGdsFormatWithoutDay()</td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="govuk-grid-row govuk-!-margin-bottom-2">
            <div class="govuk-grid-column-two-thirds">
                <h2 class="govuk-heading-m">Overview</h2>
            </div>
        </div>

        <table class="govuk-table">
            <tbody class="govuk-table__body">

                <tr class="govuk-table__row">

                    <th scope="row" class="govuk-table__header das-table-cell-width-45">Employer</th>
                    <td id="apprenticeship-employer" class="govuk-table__cell das-table-cell-width-40">@Model.Employer
                    </td>
                    <td class="govuk-table__cell das-table-cell-width-15 govuk-table__cell--numeric">
                        @if (Model.ShowChangeEmployerLink && !Model.IsOnFlexiPaymentPilot.GetValueOrDefault())
                        {
                            <a id="change-employer-link" class="govuk-link"
                                href="@Url.Action("ChangeEmployer", new {Model.ProviderId, Model.ApprenticeshipHashedId})">Change</a>
                        }
                    </td>
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Reference</th>
                    <td id="apprenticeship-reference" class="govuk-table__cell">@Model.Reference</td>
                    <td class="govuk-table__cell"></td>
                </tr>

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Agreement ID</th>
                    <td id="apprenticeship-agreement-id" class="govuk-table__cell">@Model.AgreementId</td>
                    <td class="govuk-table__cell"></td>
                </tr>

                @if (Model.EmployerHistory != null && Model.EmployerHistory.Count > 1)
                {
                    <tr>
                        <th scope="row" class="govuk-table__header">Employer history</th>
                        <td id="cohort-reference" class="govuk-table__cell">
                            @foreach (var employer in Model.EmployerHistory)
                            {
                                <p class="govuk-body">
                                    @if (employer.ShowLink)
                                    {
                                        <a class="govuk-link" asp-route="@RouteNames.ApprenticeDetail"
                                            asp-route-apprenticeshipHashedId="@employer.HashedApprenticeshipId">
                                            @employer.EmployerName
                                        </a>
                                    }
                                    else
                                    {
                                        <span>@employer.EmployerName</span>
                                    }
                                    <br />
                                    <span class="govuk-body-s">@employer.FromDate.ToString("MMM yyyy") to
                                        @employer.ToDate.ToString("MMM yyyy")</span>
                                </p>
                            }
                        </td>
                        <td class="govuk-table__cell"></td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="govuk-grid-row govuk-!-margin-bottom-2">
            <div class="govuk-grid-column-two-thirds">
                <h2 class="govuk-heading-m">Apprentice</h2>
            </div>
            <div class="govuk-grid-column-one-third das-!-text-align-right--from-tablet">
                @if (Model.AllowEditApprentice)
                {
                    <a id="edit-apprentice-link"
                        href="@Url.Action("EditApprenticeship", new { ProviderId = Model.ProviderId, ApprenticeshipHashedId = Model.ApprenticeshipHashedId })"
                        class="govuk-link govuk-body">Edit apprentice</a>
                }
            </div>
        </div>

        <table class="govuk-table">
            <tbody class="govuk-table__body">
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header das-table-cell-width-45">Name</th>
                    <td id="apprentice-name" class="govuk-table__cell das-table-cell-width-55">@Model.ApprenticeName
                    </td>
                    <td class="govuk-table__cell"></td>
                </tr>
                @if (!string.IsNullOrEmpty(Model.Email) || Model.EmailShouldBePresent)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header das-table-cell-width-45">Email address</th>
                        <td class="govuk-table__cell das-table-cell-width-55">
                            <table>
                                <tr>
                                    <td id="apprentice-email">@Model.Email</td>
                                </tr>
                                @if (Model.CanResendInvitation)
                                {
                                    <tr>
                                        <td>
                                            <a id="resend-email-invitation-link"
                                                href="@Url.Action("ResendEmailInvitation", new ResendEmailInvitationRequest { ProviderId = Model.ProviderId, ApprenticeshipHashedId = Model.ApprenticeshipHashedId })"
                                                class="govuk-link">Resend invitation email</a>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </td>

                        <td class="govuk-table__cell"></td>
                    </tr>
                }
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Date of birth</th>
                    <td id="apprentice-dob" class="govuk-table__cell">@Model.DateOfBirth.ToGdsFormat()</td>
                    <td class="govuk-table__cell"></td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Unique learner number</th>
                    <td id="apprentice-uln" class="govuk-table__cell">@Model.Uln</td>
                    <td class="govuk-table__cell"></td>
                </tr>
                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Apprenticeship training course</th>
                    <td id="apprentice-course" class="govuk-table__cell">@Model.CourseName</td>
                    <td class="govuk-table__cell"></td>
                </tr>
                @if (!Model.DeliveryModel.Equals(DeliveryModel.Regular) || Model.HasMultipleDeliveryModelOptions)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Apprenticeship delivery model</th>
                        <td id="apprentice-deliverymodel" class="govuk-table__cell">@Model.DeliveryModel.ToDescription()
                        </td>
                        <td class="govuk-table__cell"></td>
                    </tr>
                }
                @if (!string.IsNullOrEmpty(Model.Version))
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Version</th>
                        <td id="apprentice-course" class="govuk-table__cell">@Model.Version</td>
                        <td class="govuk-table__cell das-table-cell-width-15 govuk-table__cell--numeric">
                            @if (Model.ShowChangeVersionLink && Model.AllowEditApprentice)
                            {
                                <a id="change-version-link" class="govuk-link" asp-route="@RouteNames.ChangeVersion"
                                   asp-route-providerId="@Model.ProviderId" asp-route-apprenticeshipHashedId="@Model.ApprenticeshipHashedId">Change</a>
                            }
                        </td>
                    </tr>
                }
                @if (Model.Option != null || Model.HasOptions)
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Option</th>
                        <td id="apprentice-course" class="govuk-table__cell">@(!string.IsNullOrEmpty(Model.Option) ?
                        Model.Option : "To be confirmed")</td>
                        <td class="govuk-table__cell das-table-cell-width-15 govuk-table__cell--numeric">
                            @if (Model.AllowEditApprentice && Model.HasOptions && !Model.SingleOption)
                            {
                                <a id="change-version-link" class="govuk-link" asp-route="@RouteNames.ChangeOption"
                                   asp-route-providerId="@Model.ProviderId" asp-route-apprenticeshipHashedId="@Model.ApprenticeshipHashedId">Change</a>
                            }
                        </td>
                    </tr>
                }

                @if (!Model.HasPendingStartDateChange)
                {
                    <tr class="govuk-table__row">
                        @if (Model.ActualStartDate.HasValue)
                        {
                            <th scope="row" class="govuk-table__header">Actual training start date</th>
                            <td id="apprentice-start-date" class="govuk-table__cell">@Model.ActualStartDate.Value.ToGdsFormat()</td>
                        }
                        else
                        {
                            <th scope="row" class="govuk-table__header">Planned training start date</th>
                            <td id="apprentice-start-date" class="govuk-table__cell">@Model.StartDate.Value.ToGdsFormatWithoutDay()</td>
                        }
                        <td class="govuk-table__cell">
                            @if (Model.IsOnFlexiPaymentPilot.GetValueOrDefault() && Model.CanActualStartDateBeChanged == true)
                            {
                                <a id="linkChangeStartDate" asp-external-controller=""
                                   asp-external-subdomain="apprenticeshipdetails"
                                   asp-external-relativeroute="@Model.ChangeOfStartDateRoute" class="govuk-link">Change</a>
                            }
                        </td>
                    </tr>
                }
                else
                {
                    <partial name="DetailsPartials/_PendingChangeOfStartDateDetails" />
                }



                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Planned training end date</th>
                    <td id="apprentice-end-date" class="govuk-table__cell">
                        @(Model.IsOnFlexiPaymentPilot.GetValueOrDefault() ? Model.EndDate.ToGdsFormat() :
                            Model.EndDate.ToGdsFormatWithoutDay())</td>
                    <td class="govuk-table__cell"></td>
                </tr>

                @if (Model.DeliveryModel.Equals(DeliveryModel.PortableFlexiJob))
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Planned end date for this employment</th>
                        <td id="apprentice-end-date" class="govuk-table__cell">@Model.EmploymentEndDateDisplay</td>
                        <td class="govuk-table__cell"></td>
                    </tr>
                }
                @if (Model.DeliveryModel.Equals(DeliveryModel.PortableFlexiJob))
                {
                    <tr class="govuk-table__row">
                        <th scope="row" class="govuk-table__header">Training price for this employment</th>
                        <td id="apprentice-end-date" class="govuk-table__cell">@Model.EmploymentPriceDisplay</td>
                        <td class="govuk-table__cell"></td>
                    </tr>
                }

                @if (!Model.HasPendingPriceChange)
                {
                    @if (Model.IsOnFlexiPaymentPilot.GetValueOrDefault())
                    {
                        <tr class="govuk-table__row">
                            <th scope="row" class="govuk-table__header">Training price</th>
                            <td id="training-price" class="govuk-table__cell">
                                @Model.TrainingPrice.GetValueOrDefault().ToGdsCostFormat()
                                @if (Model.HasPendingPriceChange)
                                {
                                    <strong class="govuk-tag govuk-tag govuk-tag--yellow">Pending</strong>
                                }
                            </td>
                            <td class="govuk-table__cell"></td>
                        </tr>
                        <tr class="govuk-table__row">
                            <th scope="row" class="govuk-table__header">End-point assessment price</th>
                            <td id="end-point-assessment-price" class="govuk-table__cell">
                                @Model.EndPointAssessmentPrice.GetValueOrDefault().ToGdsCostFormat()</td>
                            <td class="govuk-table__cell"></td>
                        </tr>
                        <tr class="govuk-table__row">
                            <th scope="row" class="govuk-table__header">Total price</th>
                            <td id="total-price" class="govuk-table__cell">@Model.Cost.ToGdsCostFormat()</td>
                            <td class="govuk-table__cell">
                                <a id="linkChangePrice" asp-external-controller=""
                                    asp-external-subdomain="apprenticeshipdetails"
                                    asp-external-relativeroute="@Model.ChangeOfPriceRoute" class="govuk-link">Change</a>
                            </td>
                        </tr>
                    }
                    else
                    {
                        <tr class="govuk-table__row">
                            <th scope="row" class="govuk-table__header">Total agreed apprenticeship price</th>
                            <td id="apprentice-price" class="govuk-table__cell">@Model.Cost.ToGdsCostFormat()</td>
                            <td class="govuk-table__cell"></td>
                        </tr>
                    }
                }

                <tr class="govuk-table__row">
                    <th scope="row" class="govuk-table__header">Your reference</th>
                    <td id="apprentice-reference" class="govuk-table__cell">@Model.ProviderRef</td>
                    <td class="govuk-table__cell"></td>
                </tr>
            </tbody>
        </table>

        @if (Model.HasPendingPriceChange)
        {
            <partial name="DetailsPartials/_PendingChangeOfPriceDetails" />
        }

        @if (Model.RecognisePriorLearning != null)
        {
            <div class="govuk-grid-row govuk-!-margin-bottom-2">
                <div class="govuk-grid-column-two-thirds">
                    <h2 class="govuk-heading-m">Prior learning details</h2>
                </div>
            </div>

            @if (Model.RecognisePriorLearning == true)
            {
                <table class="govuk-table">
                    <tbody class="govuk-table__body">

                        @if (Model.TrainingTotalHours != null)
                        {
                            <tr class="govuk-table__row">
                                <th scope="row" class="govuk-table__header">Total off-the-job training time for this apprenticeship
                                    standard</th>
                                <td id="apprenticeship-rpl-training-time-reduction" class="govuk-table__cell">
                                    @Model.TrainingTotalHoursDisplay</td>
                                <td class="govuk-table__cell"></td>
                            </tr>
                        }
                        @if (Model.DurationReducedByHours != null)
                        {
                            <tr class="govuk-table__row">
                                <th scope="row" class="govuk-table__header">Off-the-job training time reduction due to prior
                                    learning</th>
                                <td id="apprenticeship-rpl-training-time-reduction" class="govuk-table__cell">
                                    @Model.DurationReducedByHoursDisplay</td>
                                <td class="govuk-table__cell"></td>
                            </tr>
                        }
                        @if (Model.DurationReducedBy != null)
                        {
                            <tr class="govuk-table__row">
                                <th scope="row" class="govuk-table__header">Duration reduction due to prior learning</th>
                                <td id="apprenticeship-rpl-duration-reduction" class="govuk-table__cell">
                                    @Model.DurationReducedByDisplay</td>
                                <td class="govuk-table__cell"></td>
                            </tr>
                        }

                        @if (Model.PriceReducedBy != null)
                        {
                            <tr class="govuk-table__row">
                                <th scope="row" class="govuk-table__header">Price reduction due to prior learning</th>
                                <td id="apprenticeship-rpl-price-reduction" class="govuk-table__cell">
                                    @Model.PriceReducedBy.FormatCost()</td>
                                <td class="govuk-table__cell"></td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="govuk-body">This apprentice has no recognised prior learning.</p>
            }
        }

    </div>
</div>

@section breadcrumb {
    <a id="back-link" class="govuk-back-link" asp-route="@RouteNames.ApprenticesIndex" asp-route-fromsearch="true">Back</a>
}
