@using Microsoft.AspNetCore.Routing
@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.ProviderCommitments.Extensions
@using SFA.DAS.ProviderCommitments.Infrastructure.OuterApi.Types
@using SFA.DAS.ProviderCommitments.Web.Extensions
@using SFA.DAS.ProviderCommitments.Web.RouteValues
@model SFA.DAS.ProviderCommitments.Web.Models.Apprentice.ChangeOfEmployerOverlapAlertViewModel

@{
    ViewBag.Title = "Confirm details";
    ViewBag.GaData.Vpv = "/apprentices/apprentice/change-employer/confirm";
    ViewBag.GaData.Org = Model.OldEmployerName;
    var hasStopDate = Model.StopDate.HasValue;
    var stopDateString = hasStopDate ? DisplayDate(Model.StopDate.Value) : "";

    var isRegular = Model.DeliveryModel != DeliveryModel.PortableFlexiJob;

    var routeData = new
    {
        CacheKey = Model.CacheKey,
        IsEdit = true,
        Model.ApprenticeshipHashedId,
        providerId = Context.GetRouteValue("providerId")
    };
    
    string DisplayDate(DateTime value) => $"{value:MMMM yyyy}";
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <h1 class="govuk-heading-l">@ViewBag.Title</h1>
        <p>
            Check you have entered the apprentice details and training dates.
        </p>
        @if (Model.ExceedsFundingBandCap)
        {
            <div class="govuk-inset-text das-inset-text--highlight">
                <h3 class="govuk-heading-s">This apprenticeship is above the funding band maximum</h3>
                <p>
                    The new agreed apprenticeship price is above the @Model.FundingBandCap.Value.ToGdsCostFormat() <a target="_blank" href="https://www.gov.uk/government/publications/apprenticeship-funding-bands">maximum value of the funding band</a> for this apprenticeship.
                    You'll need to ask the new employer to pay the difference directly to you - this can't be funded from their account.
                </p>
            </div>
        }
        <div class="govuk-summary-card">
            <div class="govuk-summary-card__title-wrapper">
                <h2 class="govuk-summary-card__title">
                    Apprentice details
                </h2>
                <ul class="govuk-summary-card__actions">
                    <li class="govuk-summary-card__action">
                        <a id="change-details-link" class="govuk-link" href="@Url.RouteUrl(RouteNames.ApprenticeDetail, new { Model.ApprenticeshipHashedId, Model.ProviderId})">Change</a>
                    </li>                 
                </ul>
            </div>
            <div class="govuk-summary-card__content">
                <dl class="govuk-summary-list">
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Apprentice Name
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.ApprenticeName
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Unique learner number
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.Uln
                        </dd>                       
                    </div>                    
                </dl>
            </div>
        </div>
        <div class="govuk-summary-card">
            <div class="govuk-summary-card__title-wrapper">
                <h2 class="govuk-summary-card__title">
                    Current training details
                </h2>
            </div>
            <div class="govuk-summary-card__content">
                <dl class="govuk-summary-list">
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Employer
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.OldEmployerName
                        </dd>
                    </div>
                    @if (Model.ShowDeliveryModel)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Delivery model
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.OldDeliveryModel.ToDescription()
                            </dd>
                        </div>
                    }                    
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @(isRegular? "Training start date" :"Current employment start date")
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @DisplayDate(Model.OldStartDate)
                        </dd>
                    </div>
                    @if (isRegular)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Training end date
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @DisplayDate(Model.OldEndDate)
                            </dd>
                        </div>
                    }
                    else
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Current employment end date
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @(@Model.OldEmploymentEndDate.HasValue ? @DisplayDate(Model.OldEmploymentEndDate.Value) : "")
                            </dd>
                        </div>
                    }
                    @if (hasStopDate)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Stop applies from
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @stopDateString
                            </dd>
                        </div>
                    }
                    @if (!isRegular)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Training price for this employment
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.OldEmploymentPrice?.ToGdsCostFormat()
                            </dd>
                        </div>
                    }
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            Total agreed apprenticeship price
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.OldPrice.ToGdsCostFormat()
                        </dd>
                    </div>
                </dl>
            </div>
        </div>
        <div class="govuk-summary-card">
            <div class="govuk-summary-card__title-wrapper">
                <h2 class="govuk-summary-card__title">
                   Requested training details
                </h2>
            </div>
            <div class="govuk-summary-card__content">
                <dl class="govuk-summary-list">
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            New employer
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.NewEmployerName
                        </dd>                      
                    </div>
                    @if (Model.ShowDeliveryModel)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Delivery model
                            </dt>
                            <dd class="govuk-summary-list__value">
                               @Model.DeliveryModel.GetReferenceDataDescription()
                            </dd>
                            @if (Model.ShowDeliveryModelChangeLink)
                            {
                                <dd class="govuk-summary-list__actions">
                                    <a id="change-delivery-model-link" class="govuk-link" href="@Url.RouteUrl(RouteNames.ApprenticeSelectDeliveryModel, routeData)">Change</a>
                                </dd>
                            }
                        </div>
                    }
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @(isRegular ? "New training start date" : "New employment start date")
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @DisplayDate(Model.NewStartDateTime)
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a id="change-dates-link-start" class="govuk-link" href="@Url.RouteUrl(RouteNames.ApprenticeTrainingDates, routeData)">Change</a>
                        </dd>
                    </div>
                    @if (!isRegular)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                New employment end date
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @DisplayDate(Model.NewEmploymentEndDateTime.Value)
                            </dd>
                            <dd class="govuk-summary-list__actions">
                                <a id="change-dates-link-irregular" class="govuk-link" href="@Url.RouteUrl(RouteNames.ApprenticeTrainingDates, routeData)">Change</a>
                            </dd>
                        </div>
                    }
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @(isRegular ? "New training end date" : "Projected apprenticeship training end date")
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @DisplayDate(Model.NewEndDateTime)
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a id="change-dates-link-end" class="govuk-link" href="@Url.RouteUrl(RouteNames.ApprenticeTrainingDates, routeData)">Change</a>
                        </dd>
                    </div>
                    @if (!isRegular)
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">
                                Training price for this employment
                            </dt>
                            <dd class="govuk-summary-list__value">
                                @Model.NewEmploymentPrice.Value.ToGdsCostFormat()
                            </dd>
                            <dd class="govuk-summary-list__actions">
                                <a id="change-price-link-irregular" class="govuk-link" href="@Url.RouteUrl(RouteNames.ApprenticePrice, routeData)">Change</a>
                            </dd>
                        </div>
                    }
                    <div class="govuk-summary-list__row">
                        <dt class="govuk-summary-list__key">
                            @(isRegular ? "New agreed apprenticeship price" : "Total agreed apprenticeship price")
                        </dt>
                        <dd class="govuk-summary-list__value">
                            @Model.NewPrice.ToGdsCostFormat()
                        </dd>
                        <dd class="govuk-summary-list__actions">
                            <a id="change-price-link" class="govuk-link" href="@Url.RouteUrl(RouteNames.ApprenticePrice, routeData)">Change</a>
                        </dd>
                    </div>
                </dl>
            </div>
        </div>       
    </div>
</div>

<form method="post">

    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="AccountLegalEntityPublicHashedId"/>
    <input type="hidden" asp-for="CacheKey"/>
    <input type="hidden" asp-for="ProviderId"/>
    <input type="hidden" asp-for="Status"/>

    <button id="confirm-button" type="Submit" class="govuk-button">
        Save and continue
    </button>
</form>

@section breadcrumb
{
    @{
        var backLinkRouteData = routeData with
        {
            IsEdit = false
        };
    }
<a id="back-link" class="govuk-back-link" href="@Url.RouteUrl(RouteNames.ApprenticePrice, backLinkRouteData)">Back</a>
}