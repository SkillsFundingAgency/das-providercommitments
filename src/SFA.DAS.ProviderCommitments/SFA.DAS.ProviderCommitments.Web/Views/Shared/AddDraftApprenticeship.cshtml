@model SFA.DAS.ProviderCommitments.Web.Models.AddDraftApprenticeshipViewModel

@{
    ViewData["Title"] = "Apprenticeships";
    ViewBag.GaData.Vpv = "/unapproved/add/apprentice";
    ViewBag.GaData.Org = Model.Employer;
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <partial name="_ValidationSummary" />
        
        <form id="addApprenticeship" novalidate method="post">
            @Html.AntiForgeryToken()
            <input type="hidden" asp-for="CacheKey"/>
            @Html.HiddenFor(x => x.EmployerAccountLegalEntityPublicHashedId)
            @Html.HiddenFor(x => x.HasMultipleDeliveryModelOptions)            

            <button type="submit" id="defaultButton" aria-hidden="true" class="govuk-visually-hidden" tabindex="-1"></button>
            
            @if(Model.LearnerDataId == null)
            {
                <partial name="DraftApprenticeship" for="@Model" />
            }
            else
            {
                <partial name="DraftApprenticeshipReadOnly" for="@Model" />
            }
            <button type="submit" class="govuk-button" id="submitAddDraftApprenticeship">Add</button>

            @if (Model.CohortReference != null)
            {
                <p class="govuk-body govuk-!-margin-bottom-0">
                    <a class="govuk-body govuk-link" href="@Url.Action("Details", "Cohort", new { Model.ProviderId, Model.CohortReference })">Cancel</a>
                </p>
            }
        </form>

    </div>
</div>

@*
    @section  Scripts
    {
        <script src="/libs/accessible-autocomplete/accessible-autocomplete.min.js"></script>
        <script>
            accessibleAutocomplete.enhanceSelectElement({
                selectElement: document.querySelector('#CourseCode')
            })
        </script>
    }
*@
