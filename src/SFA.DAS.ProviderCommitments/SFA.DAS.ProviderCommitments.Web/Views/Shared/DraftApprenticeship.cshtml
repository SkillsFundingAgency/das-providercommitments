@using SFA.DAS.CommitmentsV2.Shared.Extensions
@using SFA.DAS.CommitmentsV2.Types
@using SFA.DAS.ProviderCommitments.Web.Extensions
@using SFA.DAS.CommitmentsV2.Api.Client
@using SFA.DAS.ProviderCommitments.Extensions
@inject SFA.DAS.Authorization.Services.IAuthorizationService AuthorizationService
@inject ICommitmentsApiClient CommitmentsApiClient
@model SFA.DAS.ProviderCommitments.Web.Models.DraftApprenticeshipViewModel

@Html.HiddenFor(x => x.ReservationId)
@Html.HiddenFor(x => x.IsContinuation)
<input type="hidden" asp-for="HasStandardOptions" />
<input type="hidden" asp-for="TrainingCourseOption" />


@{
    string editCourseLabel = "Add";
    var startDateLabel = Model.DeliveryModel == DeliveryModel.Regular ? "Planned training start date" : "Planned apprenticeship training start date";
    var endDateLabel = Model.DeliveryModel == DeliveryModel.Regular ? "Projected training finish date" : "Projected apprenticeship training finish date";

    ViewBag.ValidationOrder = "FirstName,LastName,Email,DateOfBirth,Uln,StartDate,EndDate,EmploymentEndDate,Cost,EmploymentPrice,Reference";

    Model.CourseCode = ViewData.ModelState[nameof(Model.CourseCode)]?.AttemptedValue ?? Model.CourseCode;
    Model.DeliveryModel = ViewData.ModelState[nameof(Model.DeliveryModel)]?.AttemptedValue.ToEnum<DeliveryModel>() ?? Model.DeliveryModel;

    if (!string.IsNullOrWhiteSpace(Model.CourseCode))
    {
        editCourseLabel = "Edit";
        Model.CourseName = (await CommitmentsApiClient.GetTrainingProgramme(Model.CourseCode)).TrainingProgramme.Name;
    }

}

@if (Model.IsContinuation)
{
    @Html.HiddenFor(x => x.FirstName)
    @Html.HiddenFor(x => x.LastName)
    @Html.HiddenFor(x => x.Email)
    @Html.HiddenFor(x => x.BirthDay)
    @Html.HiddenFor(x => x.BirthMonth)
    @Html.HiddenFor(x => x.BirthYear)
    @Html.HiddenFor(x => x.Uln)
    @Html.HiddenFor(x => x.CourseCode)
    @Html.HiddenFor(x => x.DeliveryModel)

    <dl class="das-definition-list">
        <dt class="das-definition-list__title">Apprentice name</dt>
        <dd class="das-definition-list__definition govuk-!-margin-bottom-4">@Model.FirstName @Model.LastName</dd>

        <dt class="das-definition-list__title">Date of birth</dt>
        <dd class="das-definition-list__definition govuk-!-margin-bottom-4">@(Model.DateOfBirth.HasValue ? Model.DateOfBirth.Date.Value.ToGdsFormat() : string.Empty)</dd>

        <dt class="das-definition-list__title">Unique learner number</dt>
        <dd class="das-definition-list__definition govuk-!-margin-bottom-4">@Model.Uln</dd>

        <dt class="das-definition-list__title">Apprenticeship training course</dt>
        <dd class="das-definition-list__definition">@Model.CourseName</dd>
    </dl>
}
else
{
    <div class="govuk-form-group">
        <fieldset class="govuk-fieldset">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                Apprentice name
            </legend>
            <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.FirstName, "govuk-form-group--error")">
                <label asp-for="FirstName" class="govuk-label">First name</label>
                @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.FirstName) })
                <input asp-for="FirstName" class="govuk-input" />
            </div>
            <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.LastName, "govuk-form-group--error")">
                <label asp-for="LastName" class="govuk-label">Last name</label>
                @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.LastName) })
                <input asp-for="LastName" class="govuk-input" />
            </div>
            <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.Email, "govuk-form-group--error")">
                <details class="govuk-details" data-module="govuk-details">
                    <summary class="govuk-details__summary">
                        <span class="govuk-details__summary-text">
                            Email address
                        </span>
                    </summary>
                    <div class="govuk-details__text">
                        Your apprentice will receive an email alert inviting them to the My apprenticeship service. On the service, your apprentice will be able to:
                        <ul class="govuk-list govuk-list--bullet">
                            <li>review and confirm their apprenticeship details</li>
                            <li>understand the roles and responsibilities of an apprentice, an employer and a training provider</li>
                            <li>find help and support during their apprenticeship</li>
                        </ul>
                    </div>
                </details>
                <label asp-for="Email" class="govuk-label">Email address</label>
                @Html.ValidationMessageFor(m => m.Email, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Email) })
                <input asp-for="Email" class="govuk-input" />
            </div>
        </fieldset>
    </div>
    <div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.DateOfBirth, "govuk-form-group--error")">
        <fieldset class="govuk-fieldset" aria-describedby="dob-hint" role="group">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                Date of birth
            </legend>
            <span id="dob-hint" class="govuk-hint">
                For example, 08 12 2001
            </span>
            @Html.ValidationMessageFor(m => m.DateOfBirth, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.DateOfBirth) })
            <div class="govuk-date-input">
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label asp-for="BirthDay" class="govuk-label govuk-date-input__label">Day</label>
                        <input asp-for="BirthDay" min="1" max="31" class="govuk-input govuk-date-input__input govuk-input--width-2" type="number">
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label asp-for="BirthMonth" class="govuk-label govuk-date-input__label">Month</label>
                        <input asp-for="BirthMonth" min="1" max="12" class="govuk-input govuk-date-input__input govuk-input--width-2" type="number">
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label asp-for="BirthYear" class="govuk-label govuk-date-input__label">Year</label>
                        <input asp-for="BirthYear" min="1900" max="9999" class="govuk-input govuk-date-input__input govuk-input--width-4" type="number">
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
    <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.Uln, "govuk-form-group--error")">
        <label asp-for="Uln" class="govuk-label govuk-!-font-weight-bold">Unique learner number</label>
        @Html.ValidationMessageFor(m => m.Uln, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Uln) })
        <input asp-for="Uln" class="govuk-input govuk-!-width-three-quarters" />
    </div>


    <div class="govuk-form-group">
        <p class="govuk-!-font-weight-bold govuk-!-margin-bottom-0">Apprenticeship training course</p>
        <p class="govuk-body">
            @Model.CourseName
            <button type="submit" name="ChangeCourse" value="Edit" class="das-button--inline-link">
                @editCourseLabel<span class="govuk-visually-hidden"> apprenticeship training course</span>
            </button>
        </p>
    </div>


    <input type="hidden" asp-for="CourseCode" class="govuk-radios__input" value="@Model.CourseCode">


    <input type="hidden" asp-for="DeliveryModel" class="govuk-radios__input" value="@(Model.DeliveryModel ?? DeliveryModel.Regular)">
}


@if (Model.HasMultipleDeliveryModelOptions)
{
    <div class="govuk-form-group">
        <p class="govuk-!-font-weight-bold govuk-!-margin-bottom-0">Apprenticeship delivery model</p>
        <p class="govuk-body">
            @Model.DeliveryModel.ToDescription()
            <button type="submit" name="ChangeDeliveryModel" value="Edit" class="das-button--inline-link">
                Edit<span class="govuk-visually-hidden"> delivery model</span>
            </button>
        </p>
    </div>
}
else if (Model.DeliveryModel != DeliveryModel.Regular)
{
    <dl class="das-definition-list">
        <dt class="das-definition-list__title">Apprenticeship delivery model</dt>
        <dd class="das-definition-list__definition govuk-!-margin-bottom-4">@Model.DeliveryModel.ToDescription()</dd>
    </dl>
}

<div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.StartDate, "govuk-form-group--error")">
    <fieldset class="govuk-fieldset" aria-describedby="start-date-hint" role="group">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
            @startDateLabel
        </legend>
        <span id="start-date-hint" class="govuk-hint">
            For example, 09 2017
            The standard version will be based on the planned training start date provided
        </span>
        @Html.ValidationMessageFor(m => m.StartDate, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.StartDate) })
        <div class="govuk-date-input">
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    <label asp-for="StartMonth" class="govuk-label govuk-date-input__label">Month</label>
                    <input asp-for="StartMonth" min="1" max="12" class="govuk-input govuk-date-input__input govuk-input--width-2" type="number">
                </div>
            </div>
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    <label asp-for="StartYear" class="govuk-label govuk-date-input__label">Year</label>
                    <input asp-for="StartYear" min="1900" max="9999" class="govuk-input govuk-date-input__input govuk-input--width-4" type="number">
                </div>
            </div>
        </div>
    </fieldset>
</div>
<div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.EndDate, "govuk-form-group--error")">
    <fieldset class="govuk-fieldset" aria-describedby="finish-date-hint" role="group">
        <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
            @endDateLabel
        </legend>
        <span id="finish-date-hint" class="govuk-hint">
            For example, 09 2019
        </span>
        @Html.ValidationMessageFor(m => m.EndDate, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.EndDate) })
        <div class="govuk-date-input">
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    <label asp-for="EndMonth" class="govuk-label govuk-date-input__label">Month</label>
                    <input asp-for="EndMonth" min="1" max="12" class="govuk-input govuk-date-input__input govuk-input--width-2" type="number">
                </div>
            </div>
            <div class="govuk-date-input__item">
                <div class="govuk-form-group">
                    <label asp-for="EndYear" class="govuk-label govuk-date-input__label">Year</label>
                    <input asp-for="EndYear" min="1900" max="9999" class="govuk-input govuk-date-input__input govuk-input--width-4" type="number">
                </div>
            </div>
        </div>
    </fieldset>
</div>

@if (Model.DeliveryModel == DeliveryModel.PortableFlexiJob)
{
    <div class="govuk-form-group  @Html.AddClassIfPropertyInError(x => x.EmploymentEndDate, "govuk-form-group--error")">
        <fieldset class="govuk-fieldset" aria-describedby="finish-date-hint" role="group">
            <legend class="govuk-fieldset__legend govuk-fieldset__legend--s">
                Planned end date for this employment
            </legend>
            <span id="employment-finish-date-hint" class="govuk-hint">
                For example, 09 2019
            </span>
            @Html.ValidationMessageFor(m => m.EmploymentEndDate, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.EmploymentEndDate) })
            <div class="govuk-date-input">
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label asp-for="EmploymentEndMonth" class="govuk-label govuk-date-input__label">Month</label>
                        <input asp-for="EmploymentEndMonth" min="1" max="12" class="govuk-input govuk-date-input__input govuk-input--width-2" type="number">
                    </div>
                </div>
                <div class="govuk-date-input__item">
                    <div class="govuk-form-group">
                        <label asp-for="EmploymentEndYear" class="govuk-label govuk-date-input__label">Year</label>
                        <input asp-for="EmploymentEndYear" min="1900" max="9999" class="govuk-input govuk-date-input__input govuk-input--width-4" type="number">
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
}

<div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.Cost, "govuk-form-group--error")">
    <label asp-for="Cost" class="govuk-label govuk-!-font-weight-bold">Total agreed apprenticeship price (excluding VAT)</label>
    <span id="price-hint" class="govuk-hint">
        Enter the price, including any end-point assessment costs, in whole pounds. For example, for £1,500 enter 1500
    </span>
    @Html.ValidationMessageFor(m => m.Cost, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Cost) })
    <span class="govuk-body govuk-!-font-weight-bold">£ </span><input asp-for="Cost" class="govuk-input govuk-input--width-5" />
</div>

@if (Model.DeliveryModel == DeliveryModel.PortableFlexiJob)
{
    <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.EmploymentPrice, "govuk-form-group--error")">
        <label asp-for="EmploymentPrice" class="govuk-label govuk-!-font-weight-bold">Agreed training price for this period of employment (excluding VAT)</label>
        <span id="employment-price-hint" class="govuk-hint">
            Enter the price in whole pounds. For example, for £1,500 enter 1500
        </span>
        @Html.ValidationMessageFor(m => m.EmploymentPrice, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.EmploymentPrice) })
        <span class="govuk-body govuk-!-font-weight-bold">£ </span><input asp-for="EmploymentPrice" class="govuk-input govuk-input--width-5" />
    </div>
}

<div class="govuk-character-count" data-module="character-count" data-maxlength="20">
    <div class="govuk-form-group @Html.AddClassIfPropertyInError(x => x.Reference, "govuk-form-group--error")">
        <label asp-for="Reference" class="govuk-label govuk-!-font-weight-bold">Reference (optional)</label>
        <span id="reference-hint" class="govuk-hint">
            Add a reference, such as employee number or location - this won’t be seen by the employer
        </span>
        @Html.ValidationMessageFor(m => m.Reference, null, new { @class = "govuk-error-message", id = "error-message-" + Html.IdFor(m => m.Reference) })

        <input maxlength="20" asp-for="Reference" class="govuk-input govuk-!-width-three-quarters js-character-count" />
    </div>
</div>

<div class="govuk-inset-text">
    <p class="govuk-body govuk-!-font-weight-bold">End-point assessments</p>
    <p class="govuk-body">We'll ask the employer to confirm the <a class="govuk-link" href="https://www.gov.uk/government/publications/using-the-register-of-apprentice-assessment-organisations" target="_blank" title="Opens in a new window">apprentice assessment organisation</a> for this apprentice. We'll do this before the end of the apprenticeship.</p>
</div>
