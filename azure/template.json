{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "serviceName": {
            "type": "string"
        },
        "sharedFrontendAppServicePlanName": {
            "type": "string"
        },
        "sharedFrontEndSubnetResourceId": {
            "type": "string"
        },
        "sharedAppServicePlanResourceGroup": {
            "type": "string"
        },
        "configurationStorageConnectionString": {
            "type": "securestring"
        },
        "environmentName": {
            "type": "string"
        },
        "resourceEnvironmentName": {
            "type": "string"
        },
        "resourceGroupLocation": {
            "type": "string"
        },
        "loggingRedisConnectionString": {
            "type": "securestring"
        },
        "loggingRedisKey": {
            "type": "securestring"
        },
        "customHostName": {
            "type": "string"
        },
        "appServiceAllowedIPs": {
            "type": "array",
            "defaultValue": []
        },
        "keyVaultCertificateName": {
            "type": "string"
        },
        "sharedKeyVaultName": {
            "type": "string"
        },
        "sharedManagementResourceGroup": {
            "type": "string"
        },
        "cdnUrl": {
            "type": "string"
        },
        "containerNameArray": {
            "type": "array"
        },
        "sharedApimName": {
            "type": "string"
        },
        "sharedApimResourceGroup": {
            "type": "string"
        },
        "tags": {
            "type": "object"
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "minimumTlsVersion": {
            "type": "string",
            "defaultValue": "TLS1_2"
        }
    },
    "variables": {
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/das-platform-building-blocks/master/templates/",
        "resourceNamePrefix": "[toLower(concat('das-', parameters('resourceEnvironmentName'),'-', parameters('serviceName')))]",
        "resourceGroupName": "[concat(variables('resourceNamePrefix'), '-rg')]",
        "storageAccountName": "[toLower(concat('das', parameters('resourceEnvironmentName'), parameters('serviceName'), 'str'))]",
        "appServiceName": "[concat(variables('resourceNamePrefix'), '-as')]",
        "configNames": "SFA.DAS.ProviderCommitments,SFA.DAS.Provider.DfeSignIn,SFA.DAS.Encoding"
    },
    "resources": [
        {
            "apiVersion": "2021-04-01",
            "name": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/resourceGroups",
            "location": "[parameters('resourceGroupLocation')]",
            "tags": "[parameters('tags')]",
            "properties": {}
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('appServiceName'), '-apim-subscription-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedApimResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'apim/apim-subscription.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimName": {
                        "value": "[parameters('sharedApimName')]"
                    },
                    "subscriptionName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "subscriptionScope": {
                        "value": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', parameters('sharedApimResourceGroup'), '/providers/Microsoft.ApiManagement/service/', parameters('sharedApimName'), '/products/ApprovalsOuterApi')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'storage-account-arm.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "allowSharedKeyAccess": {
                        "value": true
                    },
                    "minimumTlsVersion": {
                        "value": "[parameters('minimumTlsVersion')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('storageAccountName'), '-container', parameters('containerNameArray')[copyIndex()], '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "condition": "[greater(length(parameters('containerNameArray')), 0)]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'storage-container.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "containerName": {
                        "value": "[parameters('containerNameArray')[copyIndex()]]"
                    },
                    "publicAccess": {
                        "value": "None"
                    }
                }
            },
            "copy": {
                "name": "containercopy",
                "count": "[length(parameters('containerNameArray'))]"
            },
            "dependsOn": [
                "[concat(variables('storageAccountName'), '-', parameters('utcValue'))]"
            ]
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('appServiceName'), '-certificate-', parameters('utcValue'))]",
            "resourceGroup": "[parameters('sharedAppServicePlanResourceGroup')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-certificate.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultCertificateName": {
                        "value": "[parameters('keyVaultCertificateName')]"
                    },
                    "keyVaultName": {
                        "value": "[parameters('sharedKeyVaultName')]"
                    },
                    "keyVaultResourceGroup": {
                        "value": "[parameters('sharedManagementResourceGroup')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2021-04-01",
            "name": "[concat(variables('appServiceName'), '-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'app-service-v2.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "appServicePlanName": {
                        "value": "[parameters('sharedFrontendAppServicePlanName')]"
                    },
                    "appServicePlanResourceGroup": {
                        "value": "[parameters('sharedAppServicePlanResourceGroup')]"
                    },
                    "subnetResourceId": {
                        "value": "[parameters('sharedFrontEndSubnetResourceId')]"
                    },
                    "appServiceAppSettings": {
                        "value": {
                            "array": [
                                {
                                    "name": "ConfigurationStorageConnectionString",
                                    "value": "[parameters('configurationStorageConnectionString')]"
                                },
                                {
                                    "name": "EnvironmentName",
                                    "value": "[parameters('environmentName')]"
                                },
                                {
                                    "name": "ResourceEnvironmentName",
                                    "value": "[parameters('resourceEnvironmentName')]"
                                },
                                {
                                    "name": "LoggingRedisConnectionString",
                                    "value": "[parameters('loggingRedisConnectionString')]"
                                },
                                {
                                    "name": "LoggingRedisKey",
                                    "value": "[parameters('loggingRedisKey')]"
                                },
                              {
                                "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                                "value": "[reference(concat(variables('appServiceName'), '-application-insights-', parameters('utcValue'))).outputs.ConnectionString.value]"
                              },
                                {
                                    "name": "Cdn:Url",
                                    "value": "[parameters('cdnUrl')]"
                                },
                                {
                                    "name": "ConfigNames",
                                    "value": "[variables('configNames')]"
                                }
                            ]
                        }
                    },
                    "customHostName": {
                        "value": "[parameters('customHostName')]"
                    },
                    "certificateThumbprint": {
                        "value": "[reference(concat(variables('appServiceName'), '-certificate-', parameters('utcValue'))).outputs.certificateThumbprint.value]"
                    },
                    "ipSecurityRestrictions": {
                        "value": "[parameters('appServiceAllowedIPs')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        },
        {
            "apiVersion": "2017-08-01",
            "name": "[concat(variables('appServiceName'), '-application-insights-', parameters('utcValue'))]",
            "resourceGroup": "[variables('resourceGroupName')]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'application-insights.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appInsightsName": {
                        "value": "[variables('appServiceName')]"
                    },
                    "attachedService": {
                        "value": "[variables('appServiceName')]"
                    }
                }
            },
            "dependsOn": [
                "[variables('resourceGroupName')]"
            ]
        }
    ],
    "outputs": {
        "AppServiceName": {
            "type": "string",
            "value": "[variables('appServiceName')]"
        },
        "StorageAccountName": {
            "type": "string",
            "value": "[variables('storageAccountName')]"
        }
    }
}